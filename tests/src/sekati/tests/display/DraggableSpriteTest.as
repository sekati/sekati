/** * DraggableSpriteTest * @version 1.0.0 * @author jason m horwitz | sekati.com * Copyright (C) 2008  jason m horwitz, Sekat LLC. All Rights Reserved. * Released under the MIT License: http://www.opensource.org/licenses/mit-license.php */package sekati.tests.display {	import sekati.display.DraggableSprite;	import sekati.utils.ColorUtil;	import flash.display.Graphics;	import flash.display.Shape;	import flash.display.Sprite;	import flash.geom.Rectangle;	import flash.utils.setTimeout;			/**	 * DraggableSpriteTest	 */	public class DraggableSpriteTest extends AbstractTestApplication {		public function DraggableSpriteTest() {			super( );		}		override protected function initEntryPoint() : void {			super.initEntryPoint( );						var rx : Number = 10;			var ry : Number = 10;			var rw : Number = 300;			var rh : Number = 300;			var rect : Rectangle = new Rectangle( rx, ry, rw, rh );						var visualBound : Sprite = new Sprite( );			visualBound.addChild( randomBox( rx, ry, rw, rh ) );			addChild( visualBound );									// bounded, throwable 			var test0 : DraggableSprite = new DraggableSprite( rect );			test0.addChild( randomBox( ) );			addChild( test0 );						// no-bounds, throwable			var test1 : DraggableSprite = new DraggableSprite( null );			test1.addChild( randomBox( ) );			test1.y = 51;			addChild( test1 );							/*			// container			var test2Container : Sprite = new Sprite( );			test2Container.x = 500;			test2Container.y = 350;			test2Container.addChild( randomBox( 0, 0, rw, rh ) );			addChild( test2Container );						// non-zerp container bound, throwable			var test2 : DraggableSprite = new DraggableSprite( );						test2.addChild( randomBox( ) );			test2Container.addChild( test2 );			*/						var enableCB : Function = function():void {				test0.enabled = true;				setTimeout( disableCB, 5000 );			};						var disableCB : Function = function():void {				test0.enabled = false;				setTimeout( enableCB, 5000 );			};						//setTimeout( disableCB, 5000 );			}		public function randomBox(x : uint = 0, y : uint = 0, w : uint = 50, h : uint = 50) : Shape {			var s : Shape = new Shape( );			s.graphics.beginFill( ColorUtil.randomColor( ), 1 );			s.graphics.drawRect( x, y, w, h );			s.graphics.endFill( );			return s;		}	}}