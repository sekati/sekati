/** * CoreBitmapTest * @version 1.0.1 * @author jason m horwitz | sekati.com * Copyright (C) 2008  jason m horwitz, Sekat LLC. All Rights Reserved. * Released under the MIT License: http://www.opensource.org/licenses/mit-license.php */package sekati.tests.visual {	import sekati.display.CoreBitmapData;	import sekati.log.Logger;	import sekati.ui.Image;	import sekati.validators.BitmapValidator;		import flash.display.Bitmap;	import flash.events.Event;	import flash.filters.BlurFilter;			/**	 * CoreBitmapTest	 */	public class CoreBitmapTest extends AbstractTestApplication {		public static const IMG_URL : String = 'http://consume.sekati.com/_lib/img/dearmom.gif';		public var img : Image;		public function CoreBitmapTest() {			super( );		}		override protected function initEntryPoint() : void {			super.initEntryPoint( );			img = new Image( IMG_URL );			img.addEventListener( Event.INIT, loadHandler );					}		/**		 * Handle load event		 */		private function loadHandler(e : Event) : void {			Logger.$.trace( this, "img loaded: smoothed bitmap available via img.bmp!" );			img.removeEventListener( Event.INIT, loadHandler );			addChild( img );						Logger.$.info( this, "CoreBitmapData BitmapValidator constants ...\MAX_SIZE = " + BitmapValidator.MAX_SIZE + " \MAX_SIDE_LENGTH = " + BitmapValidator.MAX_SIDE_LENGTH + "\MAX_PIXELS = " + BitmapValidator.MAX_PIXELS );						trace( "MAX MAX" + BitmapValidator.MAX_SIZE );			trace( "MAX MAX MAX " + BitmapValidator.MAX_PIXELS + " vs " + BitmapValidator.MAX_SIZE * BitmapValidator.MAX_SIZE );						var bmpd : CoreBitmapData = new CoreBitmapData( img );			//var bmpd : CoreBitmapData = new CoreBitmapData( img, 0, 0, 0, 0, 20 );			//var bmpd : CoreBitmapData = new CoreBitmapData( img, 0, 0, 0, 0, 0.5 );			//var bmpd : CoreBitmapData = new CoreBitmapData( img, 0, 0, 50, 50, 1 );			//var bmpd : CoreBitmapData = new CoreBitmapData( img, 0, 0, 50, 50, 2 );						bmpd.addFilter( new BlurFilter( 4, 4, 3 ), 30, 30, 60, 60 );			var bmp : Bitmap = new Bitmap( bmpd );			bmp.y = 150;			addChild( bmp );		}			}}