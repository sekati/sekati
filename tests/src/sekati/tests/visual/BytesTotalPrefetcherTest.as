/** * @version 1.0 * @author David Dahlstroem | hell@daviddahlstroem.com * Copyright (C) 2009 David Dahlstroem. All Rights Reserved. * Released under the MIT License: http://www.opensource.org/licenses/mit-license.php */package sekati.tests.visual {	import sekati.events.LoaderEvent;	import sekati.load.URLDataLoader;	import sekati.log.Logger;		import flash.net.URLRequest;	import flash.utils.getTimer;		public class BytesTotalPrefetcherTest extends AbstractTestApplication 	{		public static const URL:String = "http://localhost/file.img";				private var loader:URLDataLoader;				private var startTime:uint;		public function BytesTotalPrefetcherTest()		{			super();						initEntryPoint();		}				override protected function initEntryPoint() : void {			super.initEntryPoint( );			Logger.$.info( this, "Test starting ..." );						loader = new URLDataLoader(new URLRequest(URL));						loader.addEventListener(LoaderEvent.BYTESTOTAL_PREFETCHED, bytesTotalPrefetched);						startTime = getTimer();						loader.prefetchBytesTotal();					}				private function bytesTotalPrefetched(e:LoaderEvent):void		{						Logger.$.trace(this, "Prefetch success. Took " + (getTimer() - startTime) + "ms.");			Logger.$.trace(this, "File size is " + loader.bytesTotal + " bytes");			Logger.$.trace(this, "Loaded waste is " + loader.bytesTotalPrefetcher.getByteWaste() + "bytes");					}	}}