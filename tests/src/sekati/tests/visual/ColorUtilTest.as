/** * ColorUtilTest * @version 1.0.2 * @author jason m horwitz | sekati.com * Copyright (C) 2008  jason m horwitz, Sekat LLC. All Rights Reserved. * Released under the MIT License: http://www.opensource.org/licenses/mit-license.php */package sekati.tests.visual {	import sekati.log.Logger;	import sekati.ui.Image;	import sekati.utils.ColorUtil;	import sekati.validators.BitmapValidator;	import flash.events.Event;			/**	 * ColorUtilTest	 */	public class ColorUtilTest extends AbstractTestApplication {		//public static const IMG_URL : String = 'http://consume.sekati.com/_lib/img/dearmom.gif';		//public static const IMG_URL : String = 'http://www.marietta.edu/style/images/Black.gif';		public static const IMG_URL : String = 'http://www.tkd.net/images/white.jpg';		public var img : Image;		public function ColorUtilTest() {			super( );		}		override protected function initEntryPoint() : void {			super.initEntryPoint( );			img = new Image( IMG_URL );			img.addEventListener( Event.INIT, loadHandler );				}		/**		 * Handle load event		 */		private function loadHandler(e : Event) : void {			Logger.$.trace( this, "img loaded: smoothed bitmap available via img.bmp!" );			img.removeEventListener( Event.INIT, loadHandler );			addChild( img );						Logger.$.info( this, "CoreBitmapData BitmapValidator constants ...\MAX_SIZE = " + BitmapValidator.MAX_SIZE + " \MAX_SIDE_LENGTH = " + BitmapValidator.MAX_SIDE_LENGTH + "\MAX_PIXELS = " + BitmapValidator.MAX_PIXELS );			Logger.$.warn( this, "Average Lightness: " + ColorUtil.averageLightness( img ) );			Logger.$.warn( this, "Average Hue: " + ColorUtil.averageHue( img ) );			Logger.$.warn( this, "Average Saturation: " + ColorUtil.averageSaturation( img ) );						Logger.$.warn( this, "Average Value: " + ColorUtil.averageValue( img ) );			Logger.$.warn( this, "Average Red: " + ColorUtil.averageRed( img ) );			Logger.$.warn( this, "Average Green: " + ColorUtil.averageGreen( img ) );				Logger.$.warn( this, "Average Blue: " + ColorUtil.averageBlue( img ) );							}			}}