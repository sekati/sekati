/** * sekati.load.ILoader * @version 1.0.1 * @author jason m horwitz | sekati.com * Copyright (C) 2008  jason m horwitz, Sekat LLC. All Rights Reserved. * Released under the MIT License: http://www.opensource.org/licenses/mit-license.php */package sekati.load {	import flash.events.Event;	import flash.net.URLRequest;	import flash.system.LoaderContext;			/**	 * ILoader provides a common API Loader Interface mapped to the <code>AbstractLoader</code>.	 */	public interface ILoader {		/**		 * Start the loading process.		 */ 		function load() : void;		/**		 * Stop the loading process.		 */ 		function close() : void;		/**		 * Cleanup the <code>AbstractLoader</code>.		 */		function destroy() : void;		/**		 * Optimized <code>dispatchEvent</code> only dispatches when there are listeners.		 */		function dispatchEvent(e : Event) : Boolean;		/**		 * The loader bytes loaded.		 */		function get bytesLoaded() : uint;		/**		 * The loader bytes total.		 */		function get bytesTotal() : uint;		/**		 * The loader percentile.		 */		function get percent() : Number;			/**		 * Returns loader context.		 */		function get context() : LoaderContext;		/**		 * Set loader context.		 */		function set context(c : LoaderContext) : void;		/**		 * The loader <code>URLRequest</code>.		 */ 		function get request() : URLRequest;			/**		 * Set loader <code>URLRequest</code>.		 */ 		function set request(r : URLRequest) : void;		/**		 * The loader url.		 */ 		function get url() : String;		/**		 * Set loader url.		 */ 		function set url(s : String) : void;		/**		 * The loading status of the loader; if <code>true</code> the loader is loading, if <code>false</code> the loader has not started yet.		 */		function get loading() : Boolean;		/**		 * The ready status of the loader content; if <code>true</code> the content is loaded, if <code>false</code> the content is not loaded.		 */		function get ready() : Boolean;				//function get content() : *;	}}