/** * CoreBitmapTest * @version 1.0.1 * @author jason m horwitz | sekati.com * Copyright (C) 2008  jason m horwitz, Sekat LLC. All Rights Reserved. * Released under the MIT License: http://www.opensource.org/licenses/mit-license.php */package sekati.tests.visual {	import sekati.display.Canvas;	import sekati.display.CoreBitmapData;	import sekati.log.Logger;	import sekati.ui.Image;	import sekati.validators.BitmapValidator;	import flash.display.Bitmap;	import flash.events.Event;	import flash.filters.BlurFilter;	/**	 * CoreBitmapTest	 */	public class CoreBitmapDataTest extends AbstractTestApplication {		public static const IMG_URL : String = '../../deploy/assets/api-logo.png';		public static const IMG_WIDTH : int = 344;		public static const IMG_HEIGHT : int = 83;		public var img : Image;		public function CoreBitmapDataTest() {			super( );		}		override protected function initEntryPoint() : void {			super.initEntryPoint( );			graphics.beginFill( 0x333333, 1 );			graphics.drawRect( 0, 0, Canvas.stage.stageWidth, Canvas.stage.stageHeight );			graphics.endFill( );			//			img = new Image( IMG_URL );			img.addEventListener( Event.INIT, loadHandler );					}		/**		 * Handle load event		 */		private function loadHandler(e : Event) : void {			Logger.$.trace( this, "img loaded: smoothed bitmap available via img.bmp!" );			img.removeEventListener( Event.INIT, loadHandler );			img.y = 50;						// display multiple uses for CoreBitmapData:			//			var bd0 : CoreBitmapData = new CoreBitmapData( img );			bd0.addFilter( new BlurFilter( 5, 5, 3 ), 20, 20, 50, 50 );			var bmp0 : Bitmap = new Bitmap( bd0 );			bmp0.y = 148;						var bd1 : CoreBitmapData = new CoreBitmapData( img, 0, 0, 0, 0, 0.5 );			var bmp1 : Bitmap = new Bitmap( bd1 );			bmp1.y = 235;						var bd2 : CoreBitmapData = new CoreBitmapData( img, 0, 0, 50, 50, 1 );			var bmp2 : Bitmap = new Bitmap( bd2 );			bmp2.y = 280;						var bd3 : CoreBitmapData = new CoreBitmapData( img, 0, 0, 50, 50, 2 );			var bmp3 : Bitmap = new Bitmap( bd3 );			bmp3.y = 335;						var bd4 : CoreBitmapData = new CoreBitmapData( img, 0, 0, 50, 50, 5 );			var bmp4 : Bitmap = new Bitmap( bd4 );			bmp4.y = 440;									//var bmpd : CoreBitmapData = new CoreBitmapData( img, 0, 0, 0, 0, 20 );			addChildren( img, bmp0, bmp1, bmp2, bmp3, bmp4 );			Logger.$.info( this, "BitmapValidator constants ...\MAX_SIZE = " + BitmapValidator.MAX_SIZE + " \MAX_SIDE_LENGTH = " + BitmapValidator.MAX_SIDE_LENGTH + "\MAX_PIXELS = " + BitmapValidator.MAX_PIXELS );		}			}}