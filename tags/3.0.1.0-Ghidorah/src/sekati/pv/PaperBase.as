/** * sekati.pv.PaperBase * @version 1.0.0 * @author jason m horwitz | sekati.com * Copyright (C) 2008  jason m horwitz, Sekat LLC. All Rights Reserved. * Released under the MIT License: http://www.opensource.org/licenses/mit-license.php */package sekati.pv {	import flash.display.Sprite;	import flash.events.Event;	import org.papervision3d.view.Viewport3D; 	import org.papervision3d.cameras.*;	import org.papervision3d.scenes.Scene3D; 	import org.papervision3d.render.BasicRenderEngine;	import org.papervision3d.core.proto.CameraObject3D; 		/**	 * PaperBase	 */	public class PaperBase extends Sprite {		public var _viewport : Viewport3D; 		public var _renderer : BasicRenderEngine; 		public var _scene : Scene3D; 		public var _camera : Camera3D;		public var _activeViewport : Viewport3D;				public var _activeScene : Scene3D;		public var _activeCamera : CameraObject3D;		/**		 * PaperBase Constructor		 */		public function PaperBase() {		}		/**		 * Initialize the PaperBase		 * @param vpWidth	viewport width		 * @param vpHeight	viewport height		 * @param vpInteractive	viewport is interactive		 */		public function init(vpWidth : Number = 800, vpHeight : Number = 600, vpInteractive : Boolean = true) : void {			initPapervision( vpWidth, vpHeight, vpInteractive );			init3d( );			init2d( );			initEvents( );		}		/**		 * Initialize PaperVision viewport, renderer, scene & camera.		 */		protected function initPapervision(vpWidth : Number, vpHeight : Number, vpInteractive : Boolean) : void {			_viewport = new Viewport3D( vpWidth, vpHeight, false, vpInteractive );			addChild( _viewport );			_renderer = new BasicRenderEngine( );			_scene = new Scene3D( );							_camera = new Camera3D( );						_activeViewport = _viewport;			_activeScene = _scene;			_activeCamera = _camera;		}		/**		 * Initialize 3d models, materials, cameras, etc.		 */		protected function init3d() : void {		}		/**		 * Initialize 2d overlays, interfaces, hud's, etc.		 */		protected function init2d() : void {		}		/**		 * Initialize events (default ENTER_FRAME but may be overriden for user input events).		 */		protected function initEvents() : void {			addEventListener( Event.ENTER_FRAME, _onEnterFrame );		}		/**		 * Process any movement or animation here.		 */		protected function processFrame() : void {		}		/**		 * The scene is re-rendered & processed each frame.		 */		protected function _onEnterFrame( ThisEvent : Event ) : void {			processFrame( );			_renderer.renderScene( _activeScene, _activeCamera, _activeViewport );		}					}}