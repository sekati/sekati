/** * sekati.display.CoreButton * @version 1.0.0 * @author jason m horwitz | sekati.com * Copyright (C) 2008  jason m horwitz, Sekat LLC. All Rights Reserved. * Released under the MIT License: http://www.opensource.org/licenses/mit-license.php */package sekati.display {	import flash.display.InteractiveObject;	import flash.events.MouseEvent;
	import sekati.core.CoreInterface;	import sekati.reflect.Stringifier;		/**	 * CoreButton provides basic mouse interaction.	 */	public class CoreButton extends InteractiveObject implements CoreInterface {
		protected var _this : InteractiveObject;		/**		 * CoreButton Constructor		 */		public function CoreButton() {			_this = this;			addEventListener( MouseEvent.MOUSE_OVER, onInteract, false, 0, true );			addEventListener( MouseEvent.MOUSE_OUT, onInteract, false, 0, true );			addEventListener( MouseEvent.CLICK, onInteract, false, 0, true );					}		/**		 * Provide basic response to core <code>MouseEvent</code>'s.		 */		protected function onInteract(e : MouseEvent = null) : void {			switch (e.type) {				case MouseEvent.MOUSE_OVER :					trace( "over" );					break;				case MouseEvent.MOUSE_OUT :					trace( "out" );					break;				case MouseEvent.CLICK :					trace( "click" );					break;				default :					trace( "default?" );					return;			}					}		/**		 * @inheritDoc		 */		public function destroy() : void {			removeEventListener( MouseEvent.MOUSE_OVER, onInteract );			removeEventListener( MouseEvent.MOUSE_OUT, onInteract );			removeEventListener( MouseEvent.CLICK, onInteract );						}		/**		 * Return reflective output		 * @return String		 */		override public function toString() : String {			return Stringifier.stringify( _this );		}			}}