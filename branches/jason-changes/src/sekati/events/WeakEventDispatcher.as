/** * sekati.events.WeakEventDispatcher * @version 1.0.1 * @author David Dahlstroem | hello@daviddahlstroem.com | jason m horwitz | sekati.com * Copyright (C) 2009  jason m horwitz, Sekat LLC. All Rights Reserved. * Released under the MIT License: http://www.opensource.org/licenses/mit-license.php */package sekati.events {	import sekati.reflect.Stringifier;	import flash.events.Event;	import flash.events.EventDispatcher;	import flash.events.IEventDispatcher;		public class WeakEventDispatcher extends EventDispatcher implements IEventDispatcher {		public function WeakEventDispatcher(target : IEventDispatcher = null) {			target = target || this;						super( target );		}		/**		 * Dispatches an event into the event flow, <i>only</i> if event property <code>hasEventListener</code> or <code>bubbles</code> are <code>true</code>. 		 */		override public function dispatchEvent(evt : Event) : Boolean {			if (hasEventListener( evt.type ) || evt.bubbles) {				return super.dispatchEvent( evt );			}			return true;		}		/**		 * Registers an event listener object with an EventDispatcher object so that the listener receives notification of an event.		 * 		 * @param useWeakReference In WeakEventDispatcher class this param is set to <code>true</code> by default.		 */		override public function addEventListener(type : String, listener : Function, useCapture : Boolean = false, priority : int = 0, useWeakReference : Boolean = true) : void {			super.addEventListener( type, listener, useCapture, priority, useWeakReference );		}		/**		 * Returns the string representation of the specified object.		 */		override public function toString() : String {			return Stringifier.stringify( this );		}	}}