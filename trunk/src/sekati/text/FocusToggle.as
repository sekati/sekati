/** * sekati.text.FocusToggle * @version 1.0.0 * @author jason m horwitz | sekati.com * Copyright (C) 2008  jason m horwitz, Sekat LLC. All Rights Reserved. * Released under the MIT License: http://www.opensource.org/licenses/mit-license.php */package sekati.text {	import flash.events.Event;	import flash.events.EventDispatcher;	import flash.events.MouseEvent;	import flash.events.TextEvent;	import flash.text.TextField;		/**	 * FocusToggle provides a togglable action to the passed-in input TextField.	 */	public class FocusToggle extends EventDispatcher {		protected var _tf : TextField;		protected var _defaultValue : String;			/**		 * FocusToggle Constructor		 */		public function FocusToggle(tf : TextField) {			_tf = tf;			_defaultValue = _tf.text;			_tf.addEventListener( TextEvent.TEXT_INPUT, inputHandler );			_tf.addEventListener( MouseEvent.CLICK, focusHandler );			_tf.stage.addEventListener( MouseEvent.CLICK, focusHandler );					}		/**		 * Handle the input event: store the default value including 		 * the latest character contained in the event.		 */		protected function inputHandler(e : TextEvent) : void {			_defaultValue = String( _tf.text + e.text );		}		/**		 * Handle the focus event.		 */		protected function focusHandler(e : Event) : void {			_tf.text = (_tf.stage.focus == _tf) ? '' : _defaultValue;		}		/**		 * Destroy the FocusToggle action for the field.		 */		public function destroy() : void {			_tf.removeEventListener( TextEvent.TEXT_INPUT, inputHandler );			_tf.removeEventListener( MouseEvent.CLICK, focusHandler );			_tf.stage.removeEventListener( MouseEvent.CLICK, focusHandler );			_defaultValue = null;			_tf = null;		}	}}