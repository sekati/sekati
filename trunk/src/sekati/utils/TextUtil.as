/** * sekati.utils.TextUtil * @version 1.0.2 * @author jason m horwitz | sekati.com * Copyright (C) 2008  jason m horwitz, Sekat LLC. All Rights Reserved. * Released under the MIT License: http://www.opensource.org/licenses/mit-license.php */package sekati.utils {	import flash.text.TextField;	import flash.text.TextFieldAutoSize;	import flash.text.TextFormat;		/**	 * Static class wrapping various Text utilities.	 */	public class TextUtil {		/**		 * Set the text of a <code>TextField</code> while preserving the formatting (leading, kerning, etc).		 */		public static function setFormattedText(tf : TextField, s : String) : void {			var textFormat : TextFormat = tf.getTextFormat( );			tf.autoSize = TextFieldAutoSize.LEFT;			tf.htmlText = s;			tf.setTextFormat( textFormat );		}		/**		 * Ellipse a single-line TextField to a specific width.		 */		public static function ellipseLine( tf : TextField , width : Number , param : String = "..." ) : void {			var n : uint = param.length + 1;			while( tf.textWidth > width ) {				if (tf.textWidth > width * 2) {					tf.text = tf.text.substr( 0, tf.text.length * 0.66 >> 0 ) + param;				}				tf.text = tf.text.substr( 0, tf.text.length - n ) + param;			}		}		/**		 * empty a TextField.onSetFocus, restore to default if blank onKillFocus on input textfield		 * @param tf (TextField) target TextField		 * @return Void		 * 		 * {@code Usage:		 * tf.onSetFocus = tf.onKillFocus = function ():Void { TextUtils.focusToggle (tf); };		 * }		 */		public static function focusToggle(tf : TextField) : void {			/*			trace( "focus toggle called" );			if (tf['defval'].length) {				if (tf.text == tf['defval']) {					tf.text = "";				} else if (tf.text == "") {					tf.text = tf['defval'];				}			} else if (tf.text.length) {				tf['defval'] = tf.text;				tf.text = "";			}			 * 			 */		}		/**		 * TextUtil Static Constructor		 */		public function TextUtil() {			throw new Error( "TextUtil is a static class and cannot be instantiated." );		}	}}