/** * sekati.events.MediaEvent * @version 1.0.0 * @author jason m horwitz | sekati.com | tendercreative.com * Copyright (C) 2008 jason m horwitz, Sekat LLC. All Rights Reserved. * Released under the MIT License: http://www.opensource.org/licenses/mit-license.php */ package sekati.events {	import flash.events.Event;		/**	 * Media Events	 */	public class MediaEvent extends Event {		public static const START : String = 'start';		public static const STOP : String = 'stop';		public static const PROGRESS : String = 'progress';		public static const METADATA : String = 'metaData';		public static const BUFFER_EMPTY : String = 'bufferEmpty';		public static const BUFFER_FULL : String = 'bufferFull';		public static const BUFFER_FLUSH : String = 'bufferFlush';		public static const SEEK_INVALID_TIME : String = 'seekInvalidTime';		public static const SEEK_NOTIFY : String = 'seekNotify';		public static const STREAM_NOT_FOUND : String = 'streamNotFound';		public static const UNRECOGNIZED : String = 'unrecognizedStatus';		protected var _code : String;		protected var _loaded : Number;		protected var _played : Number;		protected var _metadata : Object;		/**		 * MediaEvent Constructor		 */		public function MediaEvent(type : String, statusCode : String = null, percentLoaded : Number = NaN, percentPlayed : Number = NaN, metaData : Object = null, bubbles : Boolean = true, cancelable : Boolean = false) {			super( type, bubbles, cancelable );			_code = statusCode;			loaded = percentLoaded;			_played = percentPlayed;			_metadata = metaData;		}		/**		 * @inheritDoc		 */		override public function clone() : Event {			return new MediaEvent( type, code, loaded, played, metadata, bubbles, cancelable );		}		/**		 * The <code>MediaEvent</code>'s status code string.		 */		public function get code() : String {			return _code;		}		/**		 * @private		 */		public function set code(code : String) : void {			_code = code;		}		/**		 * The <code>MediaEvent</code>'s percent loaded.		 */		public function get loaded() : Number {			return loaded;		}		/**		 * @private		 */		public function set loaded(percent : Number) : void {			_loaded = percent;		}		/**		 * The <code>MediaEvent</code>'s percent played.		 */		public function get played() : Number {			return _played;		}		/**		 * @private		 */		public function set played(percent : Number) : void {			_played = percent;		}		/**		 * The <code>MediaEvent</code>'s metadata object.		 */		public function get metadata() : Object {			return _metadata;		}		/**		 * @private		 */		public function set metadata(obj : Object) : void {			_metadata = obj;		}														}}