/** * BrowserManagerTest * @version 1.0.0 * @author jason m horwitz | sekati.com * Copyright (C) 2008  jason m horwitz, Sekat LLC. All Rights Reserved. * Released under the MIT License: http://www.opensource.org/licenses/mit-license.php */package sekati.tests.visual {	import sekati.draw.Rect;	import sekati.events.BrowserEvent;	import sekati.external.BrowserAddress;	import sekati.log.Logger;	import sekati.managers.BrowserManager;	import sekati.ui.TextButton;	import flash.events.MouseEvent;	import flash.text.TextField;	import flash.text.TextFieldAutoSize;			/**	 * BrowserManagerTest	 */	public class BrowserManagerTest extends AbstractTestApplication {		public var btn0 : TextButton;		public var btn1 : TextButton;		public var btn2 : TextButton;		public var btn3 : TextButton;		public var btn4 : TextButton;			public var btn5 : TextButton;		public var btn6 : TextButton;		public var btn7 : TextButton;			public var btn8 : TextButton;		public var btn9 : TextButton;						public var tf : TextField;		public function BrowserManagerTest() {			super( );		}		/**		 * @inheritDoc		 */		override protected function initEntryPoint() : void {			super.initEntryPoint( );			configUI( );		}		/**		 * Configure UI elements.		 */		private function configUI() : void {			tf = new TextField( );			tf.autoSize = TextFieldAutoSize.LEFT;			tf.multiline = true;			tf.text = "BrowserManager Test Initializing ...";			tf.y = 100;						// 0			btn0 = new TextButton( "Foo [MGR]", new Rect( 100, 50, 0, 0, 0, 0xCCCCCC ) );			btn0.y = 200;			btn0.addEventListener( MouseEvent.CLICK, fooClickHandler );						// 1			btn1 = new TextButton( "Bar [MGR]", new Rect( 100, 50, 0, 0, 0, 0xCCCCCC ) );			btn1.x = 125;			btn1.y = 200;			btn1.addEventListener( MouseEvent.CLICK, barClickHandler );						// 2			btn2 = new TextButton( "Foo [BA]", new Rect( 100, 50, 0, 0, 0, 0xCCCCCC ) );			btn2.x = 250;			btn2.y = 200;			btn2.addEventListener( MouseEvent.CLICK, fooBAClickHandler );							// 3			btn3 = new TextButton( "Bar [BA]", new Rect( 100, 50, 0, 0, 0, 0xCCCCCC ) );			btn3.x = 375;			btn3.y = 200;			btn3.addEventListener( MouseEvent.CLICK, barBAClickHandler );											// 4			btn4 = new TextButton( "push(doe) [MGR]", new Rect( 100, 50, 0, 0, 0, 0xCCCCCC ) );			btn4.x = 500;			btn4.y = 200;			btn4.addEventListener( MouseEvent.CLICK, goClickHandler );															// 5			btn5 = new TextButton( "Foo", new Rect( 100, 50, 0, 0, 0, 0xCCCCCC ) );			btn5.y = 300;			btn5.addEventListener( MouseEvent.CLICK, fooClickHandler );						// 6			btn6 = new TextButton( "Bar", new Rect( 100, 50, 0, 0, 0, 0xCCCCCC ) );			btn6.x = 125;			btn6.y = 300;			btn6.addEventListener( MouseEvent.CLICK, barClickHandler );						// 7			btn7 = new TextButton( "Push (BMGR)", new Rect( 100, 50, 0, 0, 0, 0xCCCCCC ) );			btn7.x = 250;			btn7.y = 300;			btn7.addEventListener( MouseEvent.CLICK, backClickHandler );							// 8			btn8 = new TextButton( "Pop (BMGR)", new Rect( 100, 50, 0, 0, 0, 0xCCCCCC ) );			btn8.x = 375;			btn8.y = 300;			btn8.addEventListener( MouseEvent.CLICK, forwardClickHandler );											// 9			btn9 = new TextButton( "Something", new Rect( 100, 50, 0, 0, 0, 0xCCCCCC ) );			btn9.x = 500;			btn9.y = 300;			btn9.addEventListener( MouseEvent.CLICK, goClickHandler );													addChildren( tf, btn0, btn1, btn2, btn3, btn4, btn5, btn6, btn7, btn8, btn9 );						BrowserManager.$.addEventListener( BrowserEvent.ADDRESS_CHANGE, addressChange );		}		/**		 * Handle address changes ...		 */		private function addressChange(e : BrowserEvent) : void {			tf.appendText( "\nAddress Change Detected: " + e.path + ", was: " + e.previousPath );		}		private function fooClickHandler(e : MouseEvent = null) : void {			BrowserManager.$.anchor = "FOO";		}		private function fooBAClickHandler(e : MouseEvent = null) : void {			BrowserAddress.anchor = "FOO";		}		private function barClickHandler(e : MouseEvent = null) : void {			BrowserManager.$.anchor = "BAR";		}		private function barBAClickHandler(e : MouseEvent = null) : void {			BrowserAddress.anchor = "BAR";		}		private function goClickHandler(e : MouseEvent) : void {			tf.text = "Go (history index: 1)";			BrowserManager.$.go( 1 );		}		private function forwardClickHandler(e : MouseEvent) : void {			tf.text = "Advancing History";			BrowserAddress.forward( );					}		private function backClickHandler(e : MouseEvent) : void {			tf.text = "Decreasing History";			BrowserAddress.back( );				}			}}