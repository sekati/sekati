/** * sekati.events.ServiceEvent * @version 1.0.1 * @author jason m horwitz | sekati.com * Copyright (C) 2008-2009  jason m horwitz, Sekat LLC. All Rights Reserved. * Released under the MIT License: http://www.opensource.org/licenses/mit-license.php */package sekati.events {	import flash.events.Event;	/**	 * ServiceEvent provides update notification for the Viewport.	 * @see sekati.rpc.SOAPService	 * @see sekati.rpc.RemotingService	 */		public class ServiceEvent extends Event {				/**		 * @eventType serviceLoad 		 * Indicates that the service loaded successfully.		 */		public static const LOAD : String = "serviceLoad";		/**		 * @eventType serviceFault 		 * Indicates that a service fault occurred.		 */		public static const FAULT : String = "serviceFault";		/**		 * @eventType serviceResult 		 * Indicates that a service result was received.		 */		public static const RESULT : String = "serviceResult";				/*** @private */		protected var _result : *;				/*** @private */		protected var _fault : *;		/**		 * ServiceEvent Constructor		 */		public function ServiceEvent(type : String, result : * = null, fault : * = null, bubbles : Boolean = false, cancelable : Boolean = false) {			super( type, bubbles, cancelable );			_result = result;			_fault = fault;		}		/**		 * @inheritDoc		 */		override public function clone() : Event {			return new ServiceEvent( type, _result, _fault, bubbles, cancelable );		}		/**		 * The result object.		 */		public function get result() : * {			return _result;		}				/**		 * The fault object.		 */		public function get fault() : * {			return _fault;		}					}}