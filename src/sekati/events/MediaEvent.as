/** * sekati.events.MediaEvent * @version 1.0.0 * @author jason m horwitz | sekati.com | tendercreative.com * Copyright (C) 2008 jason m horwitz, Sekat LLC. All Rights Reserved. * Released under the MIT License: http://www.opensource.org/licenses/mit-license.php */ package sekati.events {	import flash.events.Event;		/**	 * Media Events	 */	public class MediaEvent extends Event {		public static const PLAY : String = 'play';		public static const STOP : String = 'stop';		public static const PAUSE : String = 'pause';		public static const RESUME : String = 'resume';		public static const SEEK : String = 'seek';		public static const PROGRESS : String = 'progress';		public static const COMPLETE : String = 'complete';		public static const BUFFER_EMPTY : String = 'bufferEmpty';		public static const BUFFER_FULL : String = 'bufferFull';		public static const BUFFER_COMPLETE : String = 'bufferComplete';		public static const PLAYHEAD_CHANGED : String = 'playheadChanged';		public static const BUFFER_CHANGED : String = 'bufferChanged';		public static const VOLUME_CHANGED : String = 'volumeChanged';		public static const SEEK_INVALID_TIME : String = 'seekInvalidTime';		/**		 * MediaEvent Constructor		 */		public function MediaEvent(type : String, bubbles : Boolean = true, cancelable : Boolean = false) {			super( type, bubbles, cancelable );		}		/**		 * @inheritDoc		 */		override public function clone() : Event {			return new StageEvent( type, bubbles, cancelable );		}						}}