/** * @version 1.0 * @author David Dahlstroem | hello@daviddahlstroem.com *  * Copyright (C) 2009 David Dahlstroem. All Rights Reserved. * Released under the MIT License: http://www.opensource.org/licenses/mit-license.php */package sekati.events{	import sekati.load.AbstractLoader;		import flash.events.Event;		public class LoaderQueueEvent extends Event 	{				public static const QUEUE_START:String = "queueStart";				public static const QUEUE_STOP:String = "queueStop";				public static const QUEUE_PROGRESS:String = "queueProgress";				public static const QUEUE_COMPLETE:String = "queueCompletes";				public static const LOADER_START:String = "queueLoaderStart";				public static const LOADER_PROGRESS:String = "queueLoaderProgress";				public static const LOADER_COMPLETE:String = "queueLoaderComplete";				public static const LOADER_ENQUEUED:String = "queueLoaderEnqueued";				public static const LOADER_DEQUEUED:String = "queueLoaderDequeued";				public var loader:AbstractLoader;				public function LoaderQueueEvent(type:String, targetLoader:AbstractLoader = null, bubbles:Boolean = false, cancelable:Boolean = false)		{			super(type, bubbles, cancelable);						loader = targetLoader;		}				override public function clone():Event		{			return new LoaderQueueEvent(type, loader, bubbles, cancelable);		}	}}