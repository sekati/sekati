/** * sekati.display.BtnClip * @version 1.0.2 * @author jason m horwitz | sekati.com | tendercreative.com * Copyright (C) 2008 jason m horwitz, Sekat LLC. All Rights Reserved. * Released under the MIT License: http://www.opensource.org/licenses/mit-license.php */package sekati.display {	import flash.events.Event;	import flash.events.FullScreenEvent;	import flash.events.MouseEvent;		import caurina.transitions.Tweener;		import sekati.display.CoreClip;		/**	 * BtnClip	 * @see http://flashenabled.wordpress.com/2007/06/12/	 */	public class BtnClip extends CoreClip {		public function BtnClip() {			super( );			_this.doubleClickEnabled = true;			_this.cacheAsBitmap = true;			// define our event listeners			_this.addEventListener( MouseEvent.ROLL_OVER, _onRollOver );			_this.addEventListener( MouseEvent.ROLL_OUT, _onRollOut );			_this.addEventListener( MouseEvent.MOUSE_OVER, _onMouseOver );			_this.addEventListener( MouseEvent.MOUSE_OUT, _onMouseOut );			_this.addEventListener( MouseEvent.MOUSE_DOWN, _onMouseDown );			_this.addEventListener( MouseEvent.MOUSE_UP, _onMouseUp );			_this.addEventListener( MouseEvent.CLICK, _onClick );			_this.addEventListener( MouseEvent.DOUBLE_CLICK, _onDoubleClick );			_this.addEventListener( MouseEvent.MOUSE_WHEEL, _onMouseWheel );			//_this.addEventListener(MouseEvent.MOUSE_MOVE, _onMouseMove);			_this.addEventListener( FullScreenEvent.FULL_SCREEN, _onFullScreen );			_this.addEventListener( Event.RESIZE, _onStageResize );		}		/**		 * Event handler - note we MUST have an 		 * e:MouseEvent param in the handler method or 		 * compiler will throw errors.		 * @param evnt		 * @return void		 */				protected function _onRollOver(e : MouseEvent) : void {			trace( "over" );		}		protected function _onRollOut(e : MouseEvent) : void {			trace( "out" );		}		protected function _onMouseOver(e : MouseEvent) : void {			trace( "mouse over" );			Tweener.addTween( _this, {rotation:720, alpha:1, time:.3} );			//tween({_color:"0xff00ff", time:.5});		}		protected function _onMouseOut(e : MouseEvent) : void {			trace( "mouse out" );			Tweener.addTween( _this, {rotation:-720, alpha:.1, time:.3} );			//tween({_color:"0xffffff", time:.5});		}				protected function _onMouseDown(e : MouseEvent) : void {			trace( "mouse down" );			_this.startDrag( );		}		protected function _onMouseUp(e : MouseEvent) : void {			trace( "mouse up" );			_this.stopDrag( );		}				protected function _onClick(e : MouseEvent) : void {			trace( "click" );			}				protected function _onDoubleClick(e : MouseEvent) : void {			trace( "double click" );			dispatchEvent( new Event( "onBtnDoubleClick", true ) );		}		protected function _onMouseWheel(e : MouseEvent) : void {			trace( "mouse wheel" );			}		protected function _onMouseMove(e : MouseEvent) : void {			trace( "mouse move" );			}		protected function _onFullScreen(e : FullScreenEvent) : void {			trace( "on Full Screen" );			}		protected function _onStageResize(e : Event) : void {			trace( "stage resize" );			}	}}