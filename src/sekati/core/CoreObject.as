/** * sekati.core.CoreObject * @version 1.0.1 * @author jason m horwitz | sekati.com | tendercreative.com * Copyright (C) 2008 jason m horwitz, Sekat LLC. All Rights Reserved. * Released under the MIT License: http://www.opensource.org/licenses/mit-license.php */package sekati.core {	import sekati.core.CoreInterface;	import sekati.core.KeyFactory;	import sekati.reflect.Stringifier;	/**	 * The core mixin object in the SASAPI framework.	 */	dynamic public class CoreObject extends Object implements CoreInterface {		/**		 * CoreObject Constructor calls superclass, links _this and injects a 		 * <code>sekati.crypt.RUID</code> via <code>sekati.core.KeyFactory</code>.		 */				public function CoreObject() {			super( );			KeyFactory.getKey( this );			}		/**		 * Clean and destroy object instance contents/self for garbage collection.		 * Always call destroy() before deleting last object pointer.		 * @return void		 */				public function destroy() : void {			for(var i:String in this) delete this[i];				delete this;		}		/**		 * Return a String Representation of the object.		 * @return String		 */		public function toString() : String {			return Stringifier.stringify( this );			}	}}