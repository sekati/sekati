/** * sekati.draw.Curve * @version 1.0.0 * @author jason m horwitz | sekati.com * Copyright (C) 2008  jason m horwitz, Sekat LLC. All Rights Reserved. * Released under the MIT License: http://www.opensource.org/licenses/mit-license.php */package sekati.draw {	import flash.display.Shape;	import flash.geom.Point;		/**	 * Curve provides a 3-point curved line Shape which, unline <code>Bezier</code> does not require a control point.	 * @see sekati.draw.Bezier	 */	public class Curve extends Shape {		/**		 * Curve Constructor		 */		public function Curve(startPt : Point, thruPt : Point, endPt : Point,  thickness : Number = 1, color : uint = 0x000000,  alpha : Number = 1, pixelHinting : Boolean = false, scaleMode : String = "normal", caps : String = null, joints : String = null, miterLimit : Number = 3) {			var controlPt : Point = new Point( ((2 * thruPt.x) - 0.5 * (startPt.x + endPt.x)), ((2 * thruPt.y) - 0.5 * (startPt.y + endPt.y)) );			this.graphics.lineStyle( thickness, color, alpha, pixelHinting, scaleMode, caps, joints, miterLimit );			this.graphics.moveTo( startPt.x, startPt.y );			this.graphics.curveTo( controlPt.x, controlPt.y, endPt.x, endPt.y );		}		/**		 * Clear the drawing.		 */		public function clear() : void {			this.graphics.clear( );			}			}}