/** * sekati.load.AbstractLoader * @version 1.0.0 * @author jason m horwitz | sekati.com * Copyright (C) 2008  jason m horwitz, Sekat LLC. All Rights Reserved. * Released under the MIT License: http://www.opensource.org/licenses/mit-license.php */package sekati.load {	import flash.net.URLLoader;		import flash.display.Loader;		import flash.events.EventDispatcher;	import flash.events.HTTPStatusEvent;	import flash.events.IOErrorEvent;	import flash.events.ProgressEvent;	import flash.events.SecurityErrorEvent;	import flash.events.Event;	/**	 * AbstractLoader	 */	public class AbstractLoader extends EventDispatcher {		protected var _loader : URLLoader;		protected var _uri : String;		/**		 * AbstractLoader Constructor		 */		public function AbstractLoader(url : String, init : Boolean = true) {			_uri = url;			_loader = new URLLoader( );			_loader.addEventListener( Event.COMPLETE, completeHandler, false, 0, true );			_loader.addEventListener( Event.OPEN, openHandler, false, 0, true );			_loader.addEventListener( ProgressEvent.PROGRESS, progressHandler, false, 0, true );			_loader.addEventListener( SecurityErrorEvent.SECURITY_ERROR, securityErrorHandler, false, 0, true );			_loader.addEventListener( HTTPStatusEvent.HTTP_STATUS, httpStatusHandler, false, 0, true );			_loader.addEventListener( IOErrorEvent.IO_ERROR, ioErrorHandler, false, 0, true );			if (init) {				request( );				}					}				private function request() : void {		}		private function ioErrorHandler() : void {		}		private function httpStatusHandler() : void {		}		private function securityErrorHandler() : void {		}		private function progressHandler() : void {		}		private function openHandler() : void {		}		private function completeHandler() : void {		}	}}