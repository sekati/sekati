/** * sekati.load.AssetLocator * @version 1.0.0 * @author jason m horwitz | sekati.com * Copyright (C) 2008  jason m horwitz, Sekat LLC. All Rights Reserved. * Released under the MIT License: http://www.opensource.org/licenses/mit-license.php */package sekati.load {	import sekati.log.Logger;		import flash.utils.Dictionary;		/**	 * AssetLocator provides a weak-referenced	 */	public class AssetLocator {		/*** @private */		private static var stack : Dictionary = new Dictionary( true );		/**		 * Register an asset for weak referencing by <code>AbstractCoreLoader.url</code> property.		 * @param l 	the <code>AbstractCoreLoader</code> instance to register.		 */		public static function register(l : AbstractCoreLoader) : void {			stack[l.url] = l;		}		/**		 * Unregister an asset for by <code>AbstractCoreLoader.url</code> property.		 * @param url 	the <code>AbstractLoader.url</code> identifier property.		 */		public static function unregister(url : String) : void {			stack[url] = null;		}		/**		 * Determine whether an <code>AbstractCoreLoader</code> has been registered or not.		 */		public static function isRegistered(url : String) : Boolean {			return (stack[url] != null);		}		/**		 * Return the weak referenced <code>AbstractCoreLoader</code> instance.		 * @param url 	the <code>AbstractLoader.url</code> identifier property.		 */		public static function getLoader(url : String) : AbstractCoreLoader {			if(isRegistered( url )) {				return stack[url];			} else {				Logger.$.error( AssetLocator, url + " is not registered." );			}		}		/**		 * AssetLocator Static Constructor		 */		public function AssetLocator() {			throw new Error( "AssetLocator is a static class and cannot be instantiated." );		}	}}