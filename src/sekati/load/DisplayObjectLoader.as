/** * sekati.load.DisplayObjectLoader * @version 1.0.0 * @author jason m horwitz | sekati.com * Copyright (C) 2008  jason m horwitz, Sekat LLC. All Rights Reserved. * Released under the MIT License: http://www.opensource.org/licenses/mit-license.php */package sekati.load {	import flash.system.LoaderContext;		import flash.net.URLRequest;		import flash.display.Loader;	import flash.display.LoaderInfo;	import flash.events.Event;	import flash.events.HTTPStatusEvent;	import flash.events.IOErrorEvent;	import flash.events.ProgressEvent;	import flash.net.URLRequest;	import sekati.load.AbstractLoader;	/**	 * DisplayObjectLoader	 */	public class DisplayObjectLoader extends AbstractLoader {		protected var loader : Loader;		protected var _loaderContext : LoaderContext;		/**		 * DisplayObjectLoader Constructor		 */		public function DisplayObjectLoader(url : String = null) {			super( new URLRequest( url ) );			loader = new Loader( );		}		override public function load(request : URLRequest = null) : void {			this.request = request;			loader.contentLoaderInfo.addEventListener( HTTPStatusEvent.HTTP_STATUS, delegate );			loader.contentLoaderInfo.addEventListener( Event.INIT, loadStop );			loader.contentLoaderInfo.addEventListener( IOErrorEvent.IO_ERROR, delegate );			loader.contentLoaderInfo.addEventListener( Event.OPEN, delegate );			loader.contentLoaderInfo.addEventListener( ProgressEvent.PROGRESS, delegate );			loader.contentLoaderInfo.addEventListener( Event.UNLOAD, delegate );					}		protected function delegate( event : Event ) : void {      			dispatchEvent( event );		}			}}